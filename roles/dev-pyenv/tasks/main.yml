---
- name: clean pyenv directory if clean flag is yes
  file:
    path: "{{ pyenv_root }}"
    state: absent
  when: pyenv_clean

- name: git clone pyenv
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "{{ pyenv_root }}"
    depth: 1

- name: git clone pyenv-update
  git:
    repo: https://github.com/pyenv/pyenv-update.git
    dest: "{{ pyenv_root }}/plugins/pyenv-update"
    depth: 1

- name: chmod pyenv root
  file:
    path: "{{ pyenv_root }}"
    state: directory
    mode: 0700

- name: create 30-pyenv.sh
  blockinfile:
    path: ~/.bash.d/30-pyenv.sh
    block: |
      export PYENV_ROOT="{{ pyenv_root }}"
      export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init -)"
    create: yes
    mode: 0600

- name: check installed python version
  stat:
    path: "{{ pyenv_root }}/versions/{{ python_version }}"
  register: python_exec

- name: python installed status
  debug:
    msg: "{{ python_exec.stat.exists }}"

- name: pyenv update
  shell: |
    source ~/.bash.d/30-pyenv.sh
    pyenv update
  when: not python_exec.stat.exists

- name: install python
  shell: |
    source ~/.bash.d/30-pyenv.sh
    pyenv install {{ python_version }}
  when: not python_exec.stat.exists

- name: change global
  shell: |
    source ~/.bash.d/30-pyenv.sh
    pyenv global {{ python_version }}
    pyenv rehash
  when: pyenv_change_global
