---
- name: nodenv clean if clean flag is yes
  file:
    path: "{{ nodenv_root }}"
    state: absent
  when: nodenv_clean

- name: git clone nodenv
  git:
    repo: https://github.com/nodenv/nodenv.git
    dest: "{{ nodenv_root }}"
    depth: 1

- name: git clone node-build
  git:
    repo: https://github.com/nodenv/node-build.git
    dest: "{{ nodenv_root }}/plugins/node-build"
    depth: 1

- name: git clone nodenv-update
  git:
    repo: https://github.com/nodenv/nodenv-update.git
    dest: "{{ nodenv_root }}/plugins/nodenv-update"
    depth: 1

- name: chmod nodenv root
  file:
    path: "{{ nodenv_root }}"
    state: directory
    mode: 0700

#- name: compile dynamic bash extension
#  shell:
#    cmd: src/configure && make -C src
#    chdir: "{{ nodenv_root }}"

- name: create 30-nodenv.sh
  blockinfile:
    path: ~/.bash.d/30-nodenv.sh
    block: |
      export NODENV_ROOT="{{ nodenv_root }}"
      export PATH="$NODENV_ROOT/bin:$PATH"
      eval "$(nodenv init -)"
    create: yes
    mode: 0600

- name: check install require
  stat:
    path: "{{ nodenv_root }}/versions/{{ nodejs_version }}"
  register: nodejs_exec
  changed_when: not nodejs_exec.stat.exists

- name: nodenv update
  shell: |
      source ~/.bash.d/30-nodenv.sh
      nodenv update
  when: not nodejs_exec.stat.exists

- name: install nodejs
  shell: |
    source ~/.bash.d/30-nodenv.sh
    nodenv install {{ nodejs_version }}
  when: not nodejs_exec.stat.exists

- name: get global nodejs version
  shell: |
    source ~/.bash.d/30-nodenv.sh
    nodenv global
  register: nodenv_global
  check_mode: no
  changed_when: nodenv_global.stdout != nodejs_version

- name: change global
  shell: |
    source ~/.bash.d/30-nodenv.sh
    nodenv global {{ nodejs_version }}
    nodenv rehash
  when: nodenv_global.stdout != nodejs_version
